datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  password    String
  name        String?
  surname     String?
  phone       String?
  dateOfBirth DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  role        String    @default("user")
  sessions    Session[]
  accounts    Account[]
  favourites  Favourite[]
  bookings    Booking[]
}

model Session {
  id            Int      @id @default(autoincrement())
  userId        Int
  sessionToken  String   @unique
  expires       DateTime
  user          User     @relation(fields: [userId], references: [id])
}

model Account {
  id                Int    @id @default(autoincrement())
  userId            Int
  provider          String
  providerAccountId String
  user              User   @relation(fields: [userId], references: [id])
}

model Favourite {
  id            Int         @id @default(autoincrement())
  userId        Int
  experienceId  Int
  user          User        @relation(fields: [userId], references: [id])
  experience    Experience  @relation(fields: [experienceId], references: [id])
}

model Booking {
  id            Int         @id @default(autoincrement())
  userId        Int
  experienceId  Int
  date          DateTime
  user          User        @relation(fields: [userId], references: [id])
  experience    Experience  @relation(fields: [experienceId], references: [id])
}

model Experience {
  id            Int           @id @default(autoincrement())
  name          String        @unique
  slug          String        @unique
  description   String?
  price         Float         @default(85)
  location      String        @default("Chania, Crete")
  whatsIncluded String?
  whatToBring   String?
  whyYoullLove  String?
  duration      String?
  images        String[]
  mapPin        String?
  guestReviews  Json?
  frequency     String[]
  visibility    Boolean       @default(true)

  favourites    Favourite[]
  bookings      Booking[]
  scheduleSlots ScheduleSlot[] // âœ… One-to-many relation with ScheduleSlot

  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model ScheduleSlot {
  id            Int         @id @default(autoincrement())
  experience    Experience  @relation(fields: [experienceId], references: [id])
  experienceId  Int
  date          DateTime    // The actual calendar day (e.g. 2025-05-03)
  totalSlots    Int         // Max people for that day
  bookedSlots   Int         @default(0) // How many already booked

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
